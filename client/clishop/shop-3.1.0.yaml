openapi: 3.0.3
info:
  title: shop
  description: |-
    商城系统
  version: 3.1.0
servers:
  - url: https://api-{env}.xk5.com
    description: Development & Test Environment
    variables:
      env:
        enum:
          - sdev0
          - sdev
          - dev
          - dev2
          - devx
          - dev3
          - mod
          - stg
        default: sdev0
        description: "sdev0: 藤蔓开发环境, sdev: 研发开发环境, dev/dev2/devx: 研发测试环境"
  - url: https://api.xk5.com
    description: Production Environment
tags:
  - name: Banner
    description: Shop Banner APIs
  - name: Channel
    description: Shop Channel APIs
  - name: Category
    description: Shop Category APIs
  - name: Exhibitions
    description: Shop Exhibitions APIs
  - name: Version
    description: Shop Version APIs
  - name: Item
    description: Shop Item APIS
  - name: Product
    description: Shop Product APIs, User Game User Token
  - name: Product (GameServer)
    description: Shop Product APIs, User Game Server Token
paths:
  /shop/v3.1/game/{gameNo}/banners:
    get:
      tags:
        - Banner
      summary: "banner列表"
      security:
        - UserToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bannerResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "data": [
                      {
                        "id": 1,
                        "gameNo": 224,
                        "bannerName": "banner1",
                        "bannerUrl": "https://dev-1255385461.cos.ap-shanghai.myqcloud.com/sdev/224/SHOP/PRODUCT/240.png",
                        "bannerDesc": "banner desc",
                        "exhibitionCode": "Recommend",
                        "productId": "100001",
                        "sort": 1
                      }
                    ],
                    "message": "OK"
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/game/{gameNo}/categorys:
    get:
      tags:
        - Category
      summary: "查询所有商品类别列表"
      security:
        - UserToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/productCategoryResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "message": "OK",
                    "data": [
                      {
                        "id": 22,
                        "parentId": 0,
                        "children": [
                          {
                            "id": 23,
                            "parentId": 22,
                            "existChildNode": false,
                            "categoryCode": "401",
                            "categoryName": "宠物",
                            "categoryDesc": "",
                            "sort": 0
                          },
                          {
                            "id": 24,
                            "parentId": 22,
                            "existChildNode": false,
                            "categoryCode": "402",
                            "categoryName": "宠物饰品",
                            "categoryDesc": "",
                            "sort": 0
                          }
                        ],
                        "existChildNode": true,
                        "categoryCode": "40",
                        "categoryName": "全部宠物",
                        "categoryDesc": "",
                        "sort": 0
                      }
                    ]
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/game/{gameNo}/category/{categoryCode}:
    get:
      tags:
        - Category
      summary: "查询商品子类别列表"
      security:
        - UserToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
        - $ref: "#/components/parameters/pathCategoryCode"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/productCategoryResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "message": "OK",
                    "data": [
                      {
                        "id": 22,
                        "parentId": 0,
                        "children": [
                          {
                            "id": 23,
                            "parentId": 22,
                            "existChildNode": false,
                            "categoryCode": "401",
                            "categoryName": "宠物",
                            "categoryDesc": "",
                            "sort": 0
                          },
                          {
                            "id": 24,
                            "parentId": 22,
                            "existChildNode": false,
                            "categoryCode": "402",
                            "categoryName": "宠物饰品",
                            "categoryDesc": "",
                            "sort": 0
                          }
                        ],
                        "existChildNode": true,
                        "categoryCode": "40",
                        "categoryName": "全部宠物",
                        "categoryDesc": "",
                        "sort": 0
                      }
                    ]
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/game/{gameNo}/exhibitions:
    get:
      tags:
        - Exhibitions
      summary: "查询所有展示页列表"
      security:
        - UserToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/exhibitionResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "message": "OK",
                    "data": [
                      {
                        "id": 14,
                        "parentId": 56,
                        "children": [
                          {
                            "id": 69,
                            "parentId": 14,
                            "existChildNode": false,
                            "exhibitionCode": "PetOnly",
                            "exhibitionName": "宠物",
                            "exhibitionDesc": "宠物",
                            "sort": 0
                          },
                          {
                            "id": 70,
                            "parentId": 14,
                            "existChildNode": false,
                            "exhibitionCode": "PetParts",
                            "exhibitionName": "宠物饰品",
                            "exhibitionDesc": "宠物饰品",
                            "sort": 1
                          }
                        ],
                        "existChildNode": true,
                        "exhibitionCode": "Pet",
                        "exhibitionName": "宠物",
                        "exhibitionDesc": "宠物商品",
                        "sort": 2
                      }
                    ]
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/game/{gameNo}/exhibition/{exhibitionCode}:
    get:
      tags:
        - Exhibitions
      summary: "查询子展示页列表"
      security:
        - UserToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
        - $ref: "#/components/parameters/pathExhibitionCode"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/exhibitionResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "message": "OK",
                    "data": [
                      {
                        "id": 14,
                        "parentId": 56,
                        "children": [
                          {
                            "id": 69,
                            "parentId": 14,
                            "existChildNode": false,
                            "exhibitionCode": "PetOnly",
                            "exhibitionName": "宠物",
                            "exhibitionDesc": "宠物",
                            "sort": 0
                          },
                          {
                            "id": 70,
                            "parentId": 14,
                            "existChildNode": false,
                            "exhibitionCode": "PetParts",
                            "exhibitionName": "宠物饰品",
                            "exhibitionDesc": "宠物饰品",
                            "sort": 1
                          }
                        ],
                        "existChildNode": true,
                        "exhibitionCode": "Pet",
                        "exhibitionName": "宠物",
                        "exhibitionDesc": "宠物商品",
                        "sort": 2
                      }
                    ]
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/game/{gameNo}/exhibition/{exhibitionCode}/channel/{channelCode}/products:
    get:
      tags:
        - Product
      summary: "展示页商品列表"
      description: "查询展示页商品列表信息，商品信息中包括了当前玩家限购商品已购买的次数"
      security:
        - UserToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
        - $ref: "#/components/parameters/pathExhibitionCode"
        - $ref: "#/components/parameters/pathChannelCode"
        - $ref: "#/components/parameters/queryGenders"
        - $ref: "#/components/parameters/queryProductCategory"
        - $ref: "#/components/parameters/queryCashType"
        - $ref: "#/components/parameters/querySorting"
        - $ref: "#/components/parameters/queryOs"
        - $ref: "#/components/parameters/queryOpenKey"
        - $ref: "#/components/parameters/queryPf"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/productResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "message": "OK",
                    "data": {
                      "list": [
                        {
                          "exhibitionCode": "FirstRecharge",
                          "channelCode": "10000037",
                          "productId": "SGXQ-1001-55512",
                          "productName": "产品名称",
                          "productType": 1,
                          "productCategory": "77",
                          "productIconId": "SGXQ-1001-55512",
                          "productIcon": "https://dev-1255385461.cos.ap-shanghai.myqcloud.com/sdev/224/SHOP/PRODUCT/100000015.png",
                          "productDesc": "aaaa",
                          "gender": 1,
                          "giftPossible": false,
                          "cashSort": 0,
                          "sort": 0,
                          "Limit": {
                            "limitId": 264,
                            "limitGender": 1,
                            "rechargeLimit": false,
                            "saleTimeLimit": true,
                            "saleStartAt": "2023-12-01 00:00:00",
                            "saleEndAt": "2023-12-31 23:59:59",
                            "purchaseLimitUse": true,
                            "allowPurchase": false,
                            "purchaseLimitCount": 1,
                            "purchasedCount": 1,
                            "discountLimitUse": false,
                            "allowDiscountPurchase": false,
                            "discountLimitCount": 0,
                            "discountPurchasedCount": 1,
                            "refreshLimitUse": false,
                            "refreshCycleUnit": "DAILY",
                            "refreshCycleLength": 0,
                            "cycleStartAt": "2023-12-28 00:00:00",
                            "cycleEndAt": "2023-12-28 23:59:59",
                            "saleTagList": [
                              {
                                "tageCode": "Hot",
                                "tageName": "热卖"
                              },
                              {
                                "tageCode": "New",
                                "tageName": "新品"
                              }
                            ]
                          },
                          "priceList": [
                            {
                              "cashType": 3,
                              "price": 10,
                              "discountRateUse": false,
                              "discountRate": 0,
                              "discountPrice": 10
                            }
                          ]
                        }
                      ],
                      "count": 1,
                      "firstRecharge": false
                    }
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/game/{gameNo}/exhibition/{exhibitionCode}/channel/{channelCode}/product/{productId}:
    get:
      tags:
        - Product
      summary: "展示页商品详情"
      security:
        - UserToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
        - $ref: "#/components/parameters/pathExhibitionCode"
        - $ref: "#/components/parameters/pathChannelCode"
        - $ref: "#/components/parameters/pathProductId"
        - $ref: "#/components/parameters/queryOs"
        - $ref: "#/components/parameters/queryOpenKey"
        - $ref: "#/components/parameters/queryPf"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/productDetailResponse"
              examples:
                success:
                  value: {
                    "code": 0,
                    "message": "OK",
                    "data": {
                      "exhibitionCode": "C_StarDiamond",
                      "channelCode": "10000037",
                      "productId": "Stardiamond1000",
                      "productName": "星钻 x1000",
                      "productType": 1,
                      "productCategory": "90",
                      "productIconId": "Stardiamond1000",
                      "productIcon": "https://dev-1255385461.cos.ap-shanghai.myqcloud.com/sdev/224/UGC/657849/IMAGE/20230804093041_53411.png",
                      "productDesc": "星钻 x1000\n",
                      "gender": -1,
                      "giftPossible": true,
                      "cashSort": 1000,
                      "sort": 0,
                      "Limit": {
                        "limitId": 3095,
                        "limitGender": -1,
                        "rechargeLimit": true,
                        "saleTimeLimit": false,
                        "saleStartAt": "2023-11-03 10:37:43",
                        "saleEndAt": null,
                        "purchaseLimitUse": false,
                        "purchaseLimitCount": 0,
                        "purchasedCount": 0,
                        "allowPurchase": true,
                        "discountLimitUse": false,
                        "allowDiscountPurchase": true,
                        "discountLimitCount": 0,
                        "discountPurchasedCount": 0,
                        "refreshLimitUse": false,
                        "refreshCycleUnit": "NONE",
                        "refreshCycleLength": 0,
                        "cycleStartAt": null,
                        "cycleEndAt": null,
                        "saleTagList": [
                          {
                            "tageCode": "Hot",
                            "tageName": "热卖"
                          },
                          {
                            "tageCode": "New",
                            "tageName": "新品"
                          }
                        ]
                      },
                      "priceList": [
                        {
                          "cashType": 1,
                          "price": 1000,
                          "discountRateUse": false,
                          "discountRate": 0,
                          "discountPrice": 1000
                        }
                      ],
                      "itemList": [
                        {
                          "itemId": "3",
                          "itemType": 13,
                          "itemQuantity": 1000,
                          "itemName": "星钻",
                          "itemDesc": "中",
                          "image": "/Sandbox/Currency/3.png",
                          "itemIcon": "https://dev-1255385461.cos.ap-shanghai.myqcloud.com/sdev/224/SHOP/PRODUCT/ITEM/Sandbox/Currency/3.png",
                          "itemCategory": "None",
                          "genderType": "Both",
                          "itemGrade": "None",
                          "source": "sandbox"
                        }
                      ]
                    }
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/game/{gameNo}/cash/balance:
    post:
      tags:
        - Product
      summary: "查询点券余额"
      security:
        - UserToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/balanceRequest"
        required: true
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/balanceResponse"
              examples:
                success:
                  value: {
                    "code": 0,
                    "data": {
                      "balance": 10,
                      "presentBalance": 0,
                      "firstRecharge": true
                    },
                    "message": "OK"
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/game/{gameNo}/product/{productId}/buy:
    post:
      tags:
        - Product
      summary: "购买商品"
      description: "购买指定商品，进行游戏币扣除和发送道具"
      security:
        - UserToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
        - $ref: "#/components/parameters/pathProductId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/buyRequest"
        required: true
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/productBuyResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "data": {
                      "orderNo": "3248678520683438000",
                      "thirdOrderNo": "test12345678910",
                      "cashType": 3,
                      "balance": 10,
                      "presentBalance": 0,
                      "deductBalance": 10,
                      "sendCode": 1,
                      "postSendItemCnt": 0,
                      "packSendItemCnt": 1
                    },
                    "message": "OK"
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/gameserver/game/{gameNo}/product/{productId}/buy:
    post:
      tags:
        - Product (GameServer)
      summary: "购买商品"
      description: "购买指定商品，进行游戏币扣除和发送道具"
      security:
        - ServerToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
        - $ref: "#/components/parameters/pathProductId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/serverBuyRequest'
        required: true
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/productBuyResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "data": {
                      "orderNo": "3248678520683438000",
                      "thirdOrderNo": "test12345678910",
                      "cashType": 3,
                      "balance": 10,
                      "presentBalance": 0,
                      "deductBalance": 10,
                      "sendCode": 1,
                      "postSendItemCnt": 0,
                      "packSendItemCnt": 1
                    },
                    "message": "OK"
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/game/{gameNo}/bulk-buy:
    post:
      tags:
        - Product
      summary: "批量购买商品"
      description: "批量购买多个商品，进行游戏币扣除和发送道具"
      security:
        - UserToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bulkBuyRequest"
        required: true
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bulkBuyResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "message": "OK",
                    "data": {
                      "sendCode": 0,
                      "postSendItemCnt": 0,
                      "packSendItemCnt": 6,
                      "orders": [
                        {
                          "orderNo": "test12345678910",
                          "thirdOrderNo": "test456713421343",
                          "cashType": 3,
                          "deductBalance": 100,
                          "sendCode": 0,
                          "postSendItemCnt": 0,
                          "packSendItemCnt": 3
                        },
                        {
                          "orderNo": "4434270554681712648",
                          "thirdOrderNo": "test456713421344",
                          "cashType": 2,
                          "deductBalance": 200,
                          "sendCode": 0,
                          "postSendItemCnt": 0,
                          "packSendItemCnt": 3
                        }
                      ]
                    }
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/gameserver/game/{gameNo}/bulk-buy:
    post:
      tags:
        - Product (GameServer)
      summary: "批量购买商品"
      description: "批量购买多个商品，进行游戏币扣除和发送道具"
      security:
        - ServerToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/serverBulkBuyRequest"
        required: true
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bulkBuyResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "message": "OK",
                    "data": {
                      "sendCode": 0,
                      "postSendItemCnt": 0,
                      "packSendItemCnt": 6,
                      "orders": [
                        {
                          "orderNo": "test12345678910",
                          "thirdOrderNo": "test456713421343",
                          "cashType": 3,
                          "deductBalance": 100,
                          "sendCode": 0,
                          "postSendItemCnt": 0,
                          "packSendItemCnt": 3
                        },
                        {
                          "orderNo": "4434270554681712648",
                          "thirdOrderNo": "test456713421344",
                          "cashType": 2,
                          "deductBalance": 200,
                          "sendCode": 0,
                          "postSendItemCnt": 0,
                          "packSendItemCnt": 3
                        }
                      ]
                    }
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/game/{gameNo}/product/{productId}/midas/buy:
    put:
      tags:
        - Product
      summary: "midas购买商品"
      description: "客户端调用midas充值点券/购买商品时，需调用本接口获取相关参数"
      security:
        - UserToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
        - $ref: "#/components/parameters/pathProductId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/buyRequest"
        required: true
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/midasBuyResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "data": {
                      "orderNo": "3248678520683438000",
                      "thirdOrderNo": "test12345678910",
                      "urlParams": "/v1/r/1450036087/mobile_goods_info?token_id=HOLD_4F74E02907C048C1785ECA5AF694547E18216&transaction_id=HOLD_4F74E02907C048C1785ECA5AF694547E18216&out_trade_no=3151326550138757123&new_cpay=1&offer_type=0"
                    },
                    "message": "OK"
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/gameserver/game/{gameNo}/product/{productId}/midas/buy:
    put:
      tags:
        - Product (GameServer)
      summary: "midas购买商品"
      description: "客户端调用midas充值点券/购买商品时，需调用本接口获取相关参数"
      security:
        - ServerToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
        - $ref: "#/components/parameters/pathProductId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/serverBuyRequest"
        required: true
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/midasBuyResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "data": {
                      "orderNo": "3248678520683438000",
                      "thirdOrderNo": "test12345678910",
                      "urlParams": "/v1/r/1450036087/mobile_goods_info?token_id=HOLD_4F74E02907C048C1785ECA5AF694547E18216&transaction_id=HOLD_4F74E02907C048C1785ECA5AF694547E18216&out_trade_no=3151326550138757123&new_cpay=1&offer_type=0"
                    },
                    "message": "OK"
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/game/{gameNo}/purchased:
    get:
      tags:
        - Product
      summary: "购买记录"
      security:
        - UserToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
        - $ref: "#/components/parameters/queryParamNo"
        - $ref: "#/components/parameters/queryParam"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/purchasedResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "data": {
                      "list": [
                        {
                          "orderNo": "3248678520683438000",
                          "thirdOrderNo": "test12345678910",
                          "channelCode": "10000037",
                          "exhibitionCode": "Recommend",
                          "cashType": 3,
                          "unitPrice": 10,
                          "purchaseQuantity": 1,
                          "discountStatus": true,
                          "originalPayPrice": 10,
                          "payPrice": 10,
                          "payStatus": 1,
                          "payMsg": "成功",
                          "provideStatus": 1,
                          "provideMsg": "发货成功",
                          "provideAt": "2023-01-12 00:00:00",
                          "createdAt": "2023-01-12 00:00:00",
                          "product": {
                            "productId": "100001",
                            "productName": "男式针织马夹服饰鞋子",
                            "productDesc": "717 男式针织马夹服饰鞋子 x1",
                            "productIconId": "717",
                            "productIcon": "https://dev-1255385461.cos.ap-shanghai.myqcloud.com/sdev/224/SHOP/PRODUCT/717.png",
                            "gender": 0,
                            "productCategory": "60",
                            "productType": 2,
                            "giftPossible": false
                          }
                        }
                      ],
                      "pageNo": 1,
                      "pageSize": 20,
                      "total": 1,
                      "totalPages": 1
                    },
                    "message": "OK"
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/game/{gameNo}/purchased/order/{orderNo}:
    get:
      tags:
        - Product
      summary: "购买的订单详情"
      security:
        - UserToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
        - $ref: "#/components/parameters/pathOrderNo"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/purchasedDetailResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "data": {
                      "orderNo": "3248678520683438000",
                      "thirdOrderNo": "test12345678910",
                      "channelCode": "10000037",
                      "exhibitionCode": "Recommend",
                      "cashType": 3,
                      "unitPrice": 10,
                      "purchaseQuantity": 1,
                      "discountStatus": true,
                      "originalPayPrice": 10,
                      "payPrice": 10,
                      "payStatus": 1,
                      "payMsg": "成功",
                      "provideStatus": 1,
                      "provideMsg": "发货成功",
                      "provideAt": "2023-01-12 00:00:00",
                      "createdAt": "2023-01-12 00:00:00",
                      "product": {
                        "productId": "100001",
                        "productName": "男式针织马夹服饰鞋子",
                        "productDesc": "717 男式针织马夹服饰鞋子 x1",
                        "productIconId": "717",
                        "productIcon": "https://dev-1255385461.cos.ap-shanghai.myqcloud.com/sdev/224/SHOP/PRODUCT/717.png",
                        "gender": 0,
                        "productCategory": "60",
                        "productType": 2,
                        "giftPossible": false
                      },
                      "itemList": [
                        {
                          "itemId": "100000001",
                          "itemType": 1,
                          "itemQuantity": 1,
                          "itemName": "蓝色马甲（男）",
                          "itemDesc": "常见于男老师的日常穿搭。",
                          "genderType": "Male",
                          "image": "/Mod/Item/100000007.png",
                          "itemIcon": "https://dev-1255385461.cos.ap-shanghai.myqcloud.com/sdev/224/SHOP/PRODUCT/ITEM/Mod/Item/100000001.png",
                          "itemCategory": "Parts_All",
                          "itemGrade": "Unique",
                          "source": "sandbox"
                        }
                      ]
                    }
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/game/{gameNo}/exhibition/{exhibitionCode}/channel/{channelCode}/limit-purchased:
    get:
      tags:
        - Product
      summary: "限制商品已购买的数量信息"
      description: "查询用户在当前展示页限制购买的商品已购买的数量信息"
      security:
        - UserToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
        - $ref: "#/components/parameters/pathExhibitionCode"
        - $ref: "#/components/parameters/pathChannelCode"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/limitPurchasedResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "message": "OK",
                    "data": [
                      {
                        "productId": "2882",
                        "allowPurchase": true,
                        "purchaseLimitUse": true,
                        "purchaseLimitCount": 2,
                        "purchasedCount": 0,
                        "discountLimitUse": true,
                        "allowDiscountPurchase": false,
                        "discountLimitCount": 1,
                        "discountPurchasedCount": 0
                      }
                    ]
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
  /shop/v3.1/gameserver/game/{gameNo}/reset-recharge:
    put:
      tags:
        - Product (GameServer)
      summary: 重置首充状态
      security:
        - ServerToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/resetRechargeRequest"
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/dataResult"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "message": "OK"
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                WalletNotFound:
                  $ref: "#/components/examples/WalletNotFound"
  /shop/v3.1/game/{gameNo}/items:
    get:
      tags:
        - Item
      summary: 查询道具信息
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
        - $ref: "#/components/parameters/queryItemIds"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/itemListResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "message": "OK",
                    "data": {
                      "list": [
                        {
                          "id": "1-100000015",
                          "source": "arcade",
                          "itemId": "100000015",
                          "itemName": "椰子呼吸器",
                          "itemIcon": "https://dev-1255385461.cos.ap-shanghai.myqcloud.com/sdev/224/SHOP/PRODUCT/ITEM/Mod/Item/100000015.png",
                          "itemType": 1,
                          "itemTag": 4,
                          "itemCategory": "None",
                          "image": "/Mod/Item/100000015.png",
                          "genderType": "Both",
                          "itemGrade": "",
                          "itemDesc": "在椰子里保存了一些空气，可以在水中使用。但是椰子内的空气只能使用一次。"
                        }
                      ]
                    }
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
  /shop/v3.1/game/{gameNo}/version/exhibition/{exhibitionCode}/channel/{channelCode}:
    get:
      tags:
        - Version
      summary: 查询商城最新版本信息
      security:
        - UserToken: [ ]
      parameters:
        - $ref: "#/components/parameters/pathGameNo"
        - $ref: "#/components/parameters/pathExhibitionCode"
        - $ref: "#/components/parameters/pathChannelCode"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/versionResponse"
              examples:
                Success:
                  value: {
                    "code": 0,
                    "data": {
                      "change": "上线多款新商品",
                      "forceUpdate": true,
                      "releaseDate": "2023-01-12 00:00:00",
                      "version": "1.0.0"
                    },
                    "message": "OK"
                  }
        500:
          description: ""
          content:
            application/json:
              examples:
                ServiceError:
                  $ref: "#/components/examples/ServiceError"
                NotAllowedBuy:
                  $ref: "#/components/examples/NotAllowedBuy"
                LimitPurchased:
                  $ref: "#/components/examples/LimitPurchased"
        401:
          description: ""
          content:
            application/json:
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
                ProductNotFound:
                  $ref: "#/components/examples/ProductNotFound"
                OrderNotFound:
                  $ref: "#/components/examples/OrderNotFound"
                CashTypeNotFound:
                  $ref: "#/components/examples/CashTypeNotFound"
                ChannelNotFound:
                  $ref: "#/components/examples/ChannelNotFound"
                CategoryNotFound:
                  $ref: "#/components/examples/CategoryNotFound"
        400:
          description: ""
          content:
            application/json:
              examples:
                LackOfCash:
                  $ref: "#/components/examples/LackOfCash"
                ThirdOrderAlreadyExist:
                  $ref: "#/components/examples/ThirdOrderAlreadyExist"
components:
  securitySchemes:
    UserToken:
      type: apiKey
      in: header
      description: "game user token"
      name: Authorization
    ServerToken:
      type: apiKey
      in: header
      description: "game server token"
      name: Authorization
  parameters:
    pathGameNo:
      name: gameNo
      in: path
      description: "game number"
      required: true
      schema:
        $ref: "#/components/schemas/gameNo"
    pathCategoryCode:
      name: categoryCode
      in: path
      description: "商品类别code"
      required: true
      schema:
        $ref: "#/components/schemas/categoryCode"
    pathProductId:
      name: productId
      in: path
      description: "商品ID"
      required: true
      schema:
        $ref: "#/components/schemas/productId"
    pathChannelCode:
      name: channelCode
      in: path
      description: "<pre>使用腾讯渠道号，如何获取？<br/>
                      客户端通过腾讯MSDK -> MSDKTools.GetConfigChannel()可获取<br/>
                    </pre>"
      required: true
      schema:
        $ref: "#/components/schemas/channelCode"
    queryItemIds:
      name: ids
      in: query
      description: "xk5平台的item id"
      required: true
      schema:
        example: [ "1-100000015" ]
        type: array
        items:
          $ref: "#/components/schemas/xk5ItemId"
    querySorting:
      name: sorting
      in: query
      description: '排序规则<pre>DEFAULT-> default sort, 按照商品设定的排序值 <br/> CASH_DESC-> cash desc<br/> CASH_ASC ->cash asc<br/></pre>'
      required: false
      schema:
        $ref: "#/components/schemas/sorting"
    queryCashType:
      name: cashType
      in: query
      description: "货币类型"
      required: false
      schema:
        $ref: "#/components/schemas/cashType"
    pathExhibitionCode:
      name: exhibitionCode
      in: path
      description: "展示页code"
      required: true
      schema:
        $ref: "#/components/schemas/exhibitionCode"
    queryGenders:
      name: genders
      in: query
      description: "商品性别"
      required: false
      schema:
        $ref: "#/components/schemas/genders"
    queryProductCategory:
      name: productCategory
      in: query
      description: "商品类别code"
      required: false
      schema:
        $ref: "#/components/schemas/categoryCode"
    pathOrderNo:
      name: orderNo
      in: path
      description: "星空屋平台订单号"
      required: true
      schema:
        $ref: "#/components/schemas/orderNo"
    queryParamNo:
      name: "pageNo"
      in: "query"
      required: false
      description: "page no at least 1, default:1"
      schema:
        $ref: "#/components/schemas/pageNo"
    queryParam:
      name: "pageSize"
      in: "query"
      required: false
      description: "page size at least 1, default:20, max: 200"
      schema:
        $ref: "#/components/schemas/pageSize"
    queryOs:
      name: "os"
      in: "query"
      required: true
      description: "操作系统：IOS/Android/PC/Web"
      schema:
        $ref: "#/components/schemas/os"
    queryOpenKey:
      name: "openKey"
      in: "query"
      required: false
      description: "可通过TVSDK XK5SDKManager.Instance.Pay.XK5SDK_GET_MIDAS_INFO()获取openKey值,查询首充状态/点券余额/购买点券商品/midas购买商品时必填"
      schema:
        $ref: "#/components/schemas/openKey"
    queryPf:
      name: "pf"
      in: "query"
      required: false
      description: "可通过TVSDK XK5SDKManager.Instance.Pay.XK5SDK_GET_MIDAS_INFO()获取pf值, 查询首充状态/点券余额/购买点券商品/midas购买商品时必填"
      schema:
        $ref: "#/components/schemas/pf"
  schemas:
    pageResult:
      properties:
        pageNo:
          $ref: "#/components/schemas/pageNo"
        pageSize:
          $ref: "#/components/schemas/pageSize"
        total:
          $ref: "#/components/schemas/total"
        totalPages:
          $ref: "#/components/schemas/totalPages"
    pageNo:
      type: "integer"
      format: "int"
      example: 1
      default: 1
      description: "页码"
    pageSize:
      type: "integer"
      format: "int"
      example: 1
      default: 20
      description: "分页大小"
    total:
      type: "integer"
      format: "int32"
      example: 1
      description: "总记录数据"
    totalPages:
      type: "integer"
      format: "int32"
      example: 1
      description: "页数"
    dataResult:
      type: "object"
      required:
        - code
        - message
      properties:
        code:
          type: "integer"
          example: 0
          description: "状态码"
        message:
          example: "OK"
          type: "string"
          description: "状态码描述"
    bannerResponse:
      allOf:
        - $ref: '#/components/schemas/dataResult'
        - type: "object"
          properties:
            data:
              type: "array"
              items:
                $ref: "#/components/schemas/bannerData"
    bannerData:
      type: "object"
      properties:
        id:
          $ref: "#/components/schemas/bannerId"
        gameNo:
          $ref: "#/components/schemas/gameNo"
        bannerName:
          $ref: "#/components/schemas/bannerName"
        bannerUrl:
          $ref: "#/components/schemas/bannerUrl"
        bannerDesc:
          $ref: "#/components/schemas/bannerDesc"
        exhibitionCode:
          $ref: "#/components/schemas/exhibitionCode"
        productId:
          $ref: "#/components/schemas/productId"
        sort:
          $ref: "#/components/schemas/sort"
    bannerDesc:
      type: "string"
      description: "banner description"
      example: "banner desc"
    bannerId:
      type: "integer"
      format: int64
      description: "banner unique identifier"
      example: 1
    bannerName:
      type: "string"
      description: "banner name"
      example: "banner1"
    bannerUrl:
      type: "string"
      description: "banner url address"
      example: "https://dev-1255385461.cos.ap-shanghai.myqcloud.com/sdev/224/SHOP/PRODUCT/240.png"
    exhibitionCode:
      type: "string"
      description: "展示页code"
      example: "Recommend"
    exhibitionName:
      type: "string"
      description: "展示页名称"
      example: "推荐"
    exhibitionDesc:
      type: "string"
      description: "展示页描述"
      example: "这是推荐目录"
    gameNo:
      type: "integer"
      format: "int64"
      description: "game number"
      example: 224
    productId:
      type: "string"
      description: "商品ID"
      example: "100001"
    sort:
      type: "integer"
      format: "int32"
      description: "排序顺序"
      example: 1
    categoryCode:
      type: "string"
      description: "商品类别code"
      example: "60"
    categoryDesc:
      type: "string"
      description: "商品类别描述"
      example: "服装"
    categoryName:
      type: "string"
      description: "商品类别名称"
      example: "服装"
    existChildNode:
      type: "boolean"
      description: "是否存在子节点"
      example: false
    treeId:
      type: "integer"
      description: "唯一id"
      format: "int64"
      example: 10
    treeParentId:
      type: "integer"
      description: "父节点id"
      format: "int64"
      example: 0
    productCategoryData:
      type: "object"
      properties:
        id:
          $ref: "#/components/schemas/treeId"
        parentId:
          $ref: "#/components/schemas/treeParentId"
        categoryCode:
          $ref: "#/components/schemas/categoryCode"
        categoryName:
          $ref: "#/components/schemas/categoryName"
        categoryDesc:
          $ref: "#/components/schemas/categoryDesc"
        sort:
          $ref: "#/components/schemas/sort"
        existChildNode:
          $ref: "#/components/schemas/existChildNode"
        children:
          type: "array"
          description: "商品类别子节点, 当不存在子类别时，该字段不返回"
          items:
            $ref: '#/components/schemas/productCategoryData'
    productCategoryResponse:
      allOf:
        - $ref: '#/components/schemas/dataResult'
        - type: "object"
          properties:
            data:
              type: "array"
              items:
                $ref: "#/components/schemas/productCategoryData"
    exhibitionData:
      type: "object"
      properties:
        id:
          $ref: "#/components/schemas/treeId"
        parentId:
          $ref: "#/components/schemas/treeParentId"
        exhibitionCode:
          $ref: "#/components/schemas/exhibitionCode"
        exhibitionName:
          $ref: "#/components/schemas/exhibitionName"
        exhibitionDesc:
          $ref: "#/components/schemas/exhibitionDesc"
        sort:
          $ref: "#/components/schemas/sort"
        existChildNode:
          $ref: "#/components/schemas/existChildNode"
        children:
          type: "array"
          description: "展示页子节点,当不存在子节点时，该字段不返回"
          items:
            $ref: '#/components/schemas/exhibitionData'
    exhibitionResponse:
      allOf:
        - $ref: '#/components/schemas/dataResult'
        - type: "object"
          properties:
            data:
              type: "array"
              items:
                $ref: "#/components/schemas/exhibitionData"
    channelCode:
      type: "string"
      description: "<pre>使用腾讯渠道号，如何获取？<br/>
                      客户端通过腾讯MSDK -> MSDKTools.GetConfigChannel()可获取<br/>
                    </pre>"
      example: "1000037"
    sorting:
      description: '排序规则<pre>DEFAULT-> default sort, 按照商品设定的排序值 <br/> CASH_DESC-> cash desc<br/> CASH_ASC ->cash asc<br/></pre>'
      type: "string"
      example: "DEFAULT"
      enum:
        - DEFAULT
        - CASH_DESC
        - CASH_ASC
    cashType:
      description: "货币类型"
      example: 1
      type: "integer"
      format: "int32"
    limitId:
      type: "integer"
      format: "int64"
      description: "限制id"
      example: 0
    limitGender:
      type: "integer"
      format: "int32"
      description: "<pre>限制购买性别<br/> 0-> female <br/> 1->male <br/> -1->general</pre>"
      example: 0
    rechargeLimit:
      type: "boolean"
      description: "是否限制首充完成才允许购买"
      example: true
    gender:
      type: "integer"
      format: "int32"
      description: "<pre>商品性别<br/> 0-> female <br/> 1->male <br/> -1->general</pre>"
      enum:
        - 0
        - 1
        - -1
      example: 0
    genders:
      type: "array"
      description: "商品性别"
      example: [-1]
      items:
        $ref: "#/components/schemas/gender"
    giftPossible:
      type: "boolean"
      description: "是否允许做为礼物赠送"
      example: false
    cycleEndAt:
      type: "string"
      description: "当前销售周期结束时间，当cycleUse=false时，cycleEndAt = saleEndAt"
      format: "date-time"
      example: "2023-01-12 00:00:00"
    cycleStartAt:
      type: "string"
      description: "当前销售周期开始时间，当cycleUse=false时，cycleStartAt = saleStartAt"
      format: "date-time"
      example: "2023-01-12 00:00:00"
    discountLimitCount:
      type: "integer"
      description: "限制优惠购买的次数，discountLimitUse=false时, 值为-1"
      example: -1
      format: "int64"
    discountLimitUse:
      type: "boolean"
      description: "是否限制优惠购买次数"
      example: false
    purchaseLimitCount:
      type: "integer"
      description: "限制购买的次数，当purchaseLimitUse=false时, 值为-1"
      example: -1
      format: "int64"
    purchaseLimitUse:
      type: "boolean"
      description: "是否限制购买次数"
      example: false
    allowPurchase:
      type: "boolean"
      description: "是否允许当前用户购买"
      example: false
    allowDiscountPurchase:
      type: "boolean"
      description: "是否允许当前用户优惠购买"
      example: false
    discountPurchasedCount:
      type: "integer"
      format: "int64"
      description: "当前用户已经优惠购买当前商品的次数，非限制购买次数商品返回默认值0"
      example: 0
    purchasedCount:
      type: "integer"
      format: "int64"
      description: "当前用户已经购买当前商品的次数, 非限制优惠购买次数商品返回默认值0"
      example: 0
    refreshCycleLength:
      type: "integer"
      description: "刷新限制次数的周期长度"
      example: 1
      format: "int64"
    refreshCycleUnit:
      type: "string"
      description: "刷新限制次数的周期单位"
      enum:
        - NONE
        - DAILY
        - WEEKLY
        - MONTHLY
        - YEARLY
      example: NONE
    refreshLimitUse:
      type: "boolean"
      description: "是否刷新限制次数(包含购买次数，优惠次数)"
      example: false
    saleEndAt:
      type: "string"
      description: "销售结束时间，当sateTimeLimit=false时，值为null"
      format: "date-time"
      example: "2023-01-12 00:00:00"
    saleStartAt:
      type: "string"
      description: "销售开始时间，当sateTimeLimit=false时，值为null"
      format: "date-time"
      example: "2023-01-12 00:00:00"
    saleTagList:
      type: "array"
      description: "销售标签列表"
      items:
        type: "object"
        properties:
          tagCode:
            $ref: "#/components/schemas/tagCode"
          tagName:
            $ref: "#/components/schemas/tagName"
    tagCode:
      type: "string"
      description: "标签code"
      example: "New"
    tagName:
      type: "string"
      description: "标签名称"
      example: "新品"
    saleTimeLimit:
      type: "boolean"
      description: "是否限制销售时间"
      example: false
    limit:
      type: "object"
      description: "商品限制信息"
      properties:
        limitId:
          $ref: "#/components/schemas/limitId"
        limitGender:
          $ref: "#/components/schemas/limitGender"
        rechargeLimit:
          $ref: "#/components/schemas/rechargeLimit"
        saleTimeLimit:
          $ref: "#/components/schemas/saleTimeLimit"
        saleStartAt:
          $ref: "#/components/schemas/saleStartAt"
        saleEndAt:
          $ref: "#/components/schemas/saleEndAt"
        refreshLimitUse:
          $ref: "#/components/schemas/refreshLimitUse"
        refreshCycleUnit:
          $ref: "#/components/schemas/refreshCycleUnit"
        refreshCycleLength:
          $ref: "#/components/schemas/refreshCycleLength"
        cycleStartAt:
          $ref: "#/components/schemas/cycleStartAt"
        cycleEndAt:
          $ref: "#/components/schemas/cycleEndAt"
        purchaseLimitUse:
          $ref: "#/components/schemas/purchaseLimitUse"
        allowPurchase:
          $ref: "#/components/schemas/allowPurchase"
        purchaseLimitCount:
          $ref: "#/components/schemas/purchaseLimitCount"
        purchasedCount:
          $ref: "#/components/schemas/purchasedCount"
        discountLimitUse:
          $ref: "#/components/schemas/discountLimitUse"
        allowDiscountPurchase:
          $ref: "#/components/schemas/allowDiscountPurchase"
        discountLimitCount:
          $ref: "#/components/schemas/discountLimitCount"
        discountPurchasedCount:
          $ref: "#/components/schemas/discountPurchasedCount"
        saleTagList:
          $ref: "#/components/schemas/saleTagList"
    priceData:
      type: "object"
      description: "商品价格信息"
      properties:
        cashType:
          $ref: "#/components/schemas/cashType"
        price:
          $ref: "#/components/schemas/price"
        discountRateUse:
          $ref: "#/components/schemas/discountRateUse"
        discountRate:
          $ref: "#/components/schemas/discountRate"
        discountPrice:
          $ref: "#/components/schemas/discountPrice"
    priceList:
      type: "array"
      description: "商品价格信息列表"
      items:
        $ref: "#/components/schemas/priceData"
    discountPrice:
      type: "integer"
      description: "优惠价格(当前销售价格),显示这个价格给玩家"
      format: "int64"
      example: 100
    discountRate:
      type: "integer"
      description: '优惠率（单位%）'
      format: "int32"
      example: 100
    discountRateUse:
      type: "boolean"
      description: "是否启用优惠"
      example: false
    price:
      type: "integer"
      format: "int64"
      description: "原价"
      example: 100
    unitPrice:
      type: "integer"
      format: "int64"
      description: "单价"
      example: 10
    originalPayPrice:
      type: "integer"
      format: "int64"
      description: "原价（折扣前），商品原价*商品数量"
      example: 10
    payPrice:
      type: "integer"
      format: "int64"
      description: "实际支付游戏币，商品原价*商品数量*折扣率"
      example: 10
    payStatus:
      type: "integer"
      format: "int32"
      description: "支付状态 </br>-1:未知状态</br> 0：取消支付/未支付</br> 1：支付成功 </br>2：支付失败/出错 </br>"
      example: 1
    payMsg:
      type: "string"
      description: '支付描述成功：Success</br>其他：返回具体的内容，没有则填空'
      example: "Success"
    provideStatus:
      type: "integer"
      format: "int32"
      description: "发货状态 </br>-1:未知状态</br> 0：未发货</br> 1：发货成功 </br> 2：发货失败</br> "
      example: 1
    provideMsg:
      type: "string"
      description: "发货描述 </br>成功：Success </br>其他：返回其他的内容，没有则填空"
      example: "Success"
    provideAt:
      type: "string"
      format: "date-time"
      description: "发货时间"
      example: "2023-01-12 00:00:00"
    createdAt:
      type: "string"
      format: "date-time"
      description: "创建时间"
      example: "2023-01-12 00:00:00"
    productDesc:
      type: "string"
      description: "商品描述信息"
      example: "717 男式针织马夹服饰鞋子 x1"
    productIcon:
      type: "string"
      description: "商品icon url"
      example: "https://dev-1255385461.cos.ap-shanghai.myqcloud.com/sdev/224/SHOP/PRODUCT/717.png"
    productIconId:
      type: "string"
      description: "商品iconId"
      example: "717"
    productName:
      type: string
      description: "商品名称"
      example: "男式针织马夹服饰鞋子"
    productType:
      type: "integer"
      description: "商品类型 1:消耗 2:永久 3::期限"
      example: 2
      format: "int32"
    cashSort:
      type: "integer"
      description: "商品根据货币排序的序号"
      example: 1
      format: "int64"
    productCount:
      type: "integer"
      description: "展示页商品数量"
      example: 1
      format: "int64"
    productResponse:
      allOf:
        - $ref: '#/components/schemas/dataResult'
        - type: "object"
          properties:
            data:
              type: object
              properties:
                list:
                  type: "array"
                  items:
                    $ref: "#/components/schemas/productData"
                count:
                  $ref: "#/components/schemas/productCount"
                firstRecharge:
                  $ref: "#/components/schemas/firstRecharge"
    productData:
      type: "object"
      properties:
        channelCode:
          $ref: "#/components/schemas/channelCode"
        exhibitionCode:
          $ref: "#/components/schemas/exhibitionCode"
        productId:
          $ref: "#/components/schemas/productId"
        productName:
          $ref: "#/components/schemas/productName"
        productDesc:
          $ref: "#/components/schemas/productDesc"
        productIcon:
          $ref: "#/components/schemas/productIcon"
        productIconId:
          $ref: "#/components/schemas/productIconId"
        gender:
          $ref: "#/components/schemas/gender"
        productCategory:
          $ref: "#/components/schemas/categoryCode"
        productType:
          $ref: "#/components/schemas/productType"
        giftPossible:
          $ref: "#/components/schemas/giftPossible"
        sort:
          $ref: "#/components/schemas/sort"
        cashSort:
          $ref: "#/components/schemas/cashSort"
        limit:
          $ref: "#/components/schemas/limit"
        priceList:
          $ref: "#/components/schemas/priceList"
    productDetailResponse:
      allOf:
        - $ref: '#/components/schemas/dataResult'
        - type: "object"
          properties:
            data:
              $ref: "#/components/schemas/productDetailData"
    productDetailData:
      allOf:
        - $ref: '#/components/schemas/productData'
        - type: "object"
          properties:
            itemList:
              $ref: "#/components/schemas/itemList"
    itemList:
      type: "array"
      description: "商品包含的道具列表信息"
      items:
        $ref: "#/components/schemas/itemData"
    itemData:
      type: "object"
      properties:
        itemId:
          $ref: "#/components/schemas/itemId"
        itemType:
          $ref: "#/components/schemas/itemType"
        itemQuantity:
          $ref: "#/components/schemas/itemQuantity"
        itemName:
          $ref: "#/components/schemas/itemName"
        itemDesc:
          $ref: "#/components/schemas/itemDesc"
        image:
          $ref: "#/components/schemas/itemImage"
        itemIcon:
          $ref: "#/components/schemas/itemIcon"
        itemCategory:
          $ref: "#/components/schemas/itemCategory"
        genderType:
          $ref: "#/components/schemas/genderType"
        itemGrade:
          $ref: "#/components/schemas/itemGrade"
        source:
          $ref: "#/components/schemas/source"
    itemId:
      type: "string"
      description: "游戏侧道具id"
      example: "100000001"
    itemType:
      type: "integer"
      format: "int32"
      description: "道具类型"
      example: 1
    itemQuantity:
      type: "integer"
      format: "int64"
      description: "道具数量"
      example: 1
    xk5ItemId:
      type: "string"
      example: "1-100000015"
      description: "星空屋平台itemId"
    genderType:
      type: "string"
      description: "道具限制性别->Male/Female/Both"
      example: "Male"
    itemCategory:
      type: "string"
      description: "道具类别code"
      example: "Parts_All"
    itemName:
      type: "string"
      description: "道具名称"
      example: "蓝色马甲（男）"
    itemDesc:
      type: "string"
      description: "道具描述"
      example: "常见于男老师的日常穿搭。"
    itemGrade:
      type: "string"
      description: "道具等级"
      example: "Unique"
    itemTag:
      type: "integer"
      description: "item tag"
      example: 1
    itemImage:
      type: "string"
      description: "道具图片名称"
      example: "/Mod/Item/100000007.png"
    itemIcon:
      type: "string"
      description: "道具icon url"
      example: "https://dev-1255385461.cos.ap-shanghai.myqcloud.com/sdev/224/SHOP/PRODUCT/ITEM/Mod/Item/100000001.png"
    source:
      type: "string"
      description: "道具来源:arcade/sandbox"
      example: "sandbox"
    openKey:
      type: "string"
      description: "可通过TVSDK XK5SDKManager.Instance.Pay.XK5SDK_GET_MIDAS_INFO()获取openKey值,查询首充状态/点券余额/购买点券商品/midas购买商品时必填"
      example: "3CF6BE75E71561C0A7C7270382D0FFDA"
    pf:
      type: "string"
      description: "可通过TVSDK XK5SDKManager.Instance.Pay.XK5SDK_GET_MIDAS_INFO()获取pf值, 查询首充状态/点券余额/购买点券商品/midas购买商品时必填"
      example: "qq_qq-73213123-android-00000000-qq-1106862728-9ED3257871E9A3BD99C9FEC69C569C2F"
    userIp:
      nullable: true
      type: "string"
      description: "用户ip"
      example: "183.14.29.148"
    balanceRequest:
      type: object
      required:
        - openKey
        - pf
        - os
      properties:
        openKey:
          $ref: "#/components/schemas/openKey"
        pf:
          $ref: "#/components/schemas/pf"
        os:
          $ref: "#/components/schemas/os"
        userIp:
          $ref: "#/components/schemas/userIp"
    balanceResponse:
      allOf:
        - $ref: '#/components/schemas/dataResult'
        - type: "object"
          properties:
            data:
              $ref: "#/components/schemas/balanceData"
    balanceData:
      type: object
      properties:
        balance:
          $ref: "#/components/schemas/balance"
        presentBalance:
          $ref: "#/components/schemas/presentBalance"
        firstRecharge:
          $ref: "#/components/schemas/firstRecharge"
    balance:
      type: "integer"
      format: "int64"
      description: "货币余额（包含赠送余额）"
      example: 10
    firstRecharge:
      description: "是否满足首次充值 true: 是 false:不是"
      example: true
      type: "boolean"
      enum:
        - true
        - false
    presentBalance:
      type: "integer"
      format: "int64"
      description: "当前赠送余额"
      example: 0
    purchasedQuantity:
      type: "integer"
      format: "int64"
      description: "购买数量"
      example: 1
    os:
      type: "string"
      description: "操作系统：IOS/Android/PC/Web"
      example: "Android"
      enum:
        - "IOS"
        - "Android"
        - "PC"
        - "Web"
    thirdOrderNo:
      description: "接入方自定义唯一订单号，需保证全局唯一，长度最小10位，最大32位"
      example: "test12345678910"
      minLength: 10
      maxLength: 32
      type: "string"
    orderNo:
      type: "string"
      description: "星空屋平台订单号"
      example: "3248678520683438000"
    deductBalance:
      type: "integer"
      description: "扣除的游戏币数量"
      example: 10
      format: "int64"
    packSendItemCnt:
      type: "integer"
      description: "发送到背包的道具数量"
      example: 1
      format: "int64"
    postSendItemCnt:
      type: "integer"
      description: "发送到邮箱的道具数量"
      example: 0
      format: "int64"
    sendCode:
      type: "integer"
      description: <pre>道具发送结果<br/>-1->发送失败<br/>0->所有商品发送到背包<br/>1->部分发放至背包，部分用邮件发送<br/>2->全部邮件发送<br/> 3 不需要发送道具</pre>
      example: 1
      format: "int32"
    characterNo:
      type: "integer"
      description: "character no"
      format: "int64"
      example: 1002109
    memberNo:
      type: "integer"
      description: "member no"
      format: "int64"
      example: 1000000019421704
    urlParams:
      type: "string"
      description: "购买物品的url的参数，开发者需要把该参数传给sdk支付接口使用户完成真正的购买动作。
        交易的token有效期为5分钟，必须在5分钟内将token传给应用来调用发货接口。
        这里token有效期指的是下单到支付的时间"
      example: "/v1/r/1450036087/mobile_goods_info?token_id=HOLD_4F74E02907C048C1785ECA5AF694547E18216&transaction_id=HOLD_4F74E02907C048C1785ECA5AF694547E18216&out_trade_no=3151326550138757123&new_cpay=1&offer_type=0"
    reason:
      nullable: true
      maxLength: 128
      type: "string"
      description: "操作的原因"
      example: "测试"
    product:
      type: "object"
      properties:
        productId:
          $ref: "#/components/schemas/productId"
        productName:
          $ref: "#/components/schemas/productName"
        productDesc:
          $ref: "#/components/schemas/productDesc"
        productIcon:
          $ref: "#/components/schemas/productIcon"
        productIconId:
          $ref: "#/components/schemas/productIconId"
        gender:
          $ref: "#/components/schemas/gender"
        productCategory:
          $ref: "#/components/schemas/categoryCode"
        productType:
          $ref: "#/components/schemas/productType"
        giftPossible:
          $ref: "#/components/schemas/giftPossible"
    order:
      description: "订单信息"
      type: "object"
      required:
        - cashType
        - exhibitionCode
        - productId
        - quantity
        - thirdOrderNo
      properties:
        cashType:
          $ref: "#/components/schemas/cashType"
        exhibitionCode:
          $ref: "#/components/schemas/exhibitionCode"
        productId:
          $ref: "#/components/schemas/productId"
        quantity:
          $ref: "#/components/schemas/purchasedQuantity"
        thirdOrderNo:
          $ref: "#/components/schemas/thirdOrderNo"
    userInfo:
      title: userInfo
      required:
        - characterNo
        - memberNo
      type: object
      properties:
        characterNo:
          $ref: "#/components/schemas/characterNo"
        memberNo:
          $ref: "#/components/schemas/memberNo"
    serverBuyRequest:
      allOf:
        - $ref: "#/components/schemas/buyRequest"
        - type: "object"
          required:
            - "userInfo"
          properties:
            userInfo:
              $ref: "#/components/schemas/userInfo"
    buyRequest:
      type: "object"
      required:
        - channelCode
        - exhibitionCode
        - os
        - cashType
        - quantity
        - thirdOrderNo
        - userIp
      properties:
        thirdOrderNo:
          $ref: "#/components/schemas/thirdOrderNo"
        cashType:
          $ref: "#/components/schemas/cashType"
        quantity:
          $ref: "#/components/schemas/purchasedQuantity"
        channelCode:
          $ref: "#/components/schemas/channelCode"
        exhibitionCode:
          $ref: "#/components/schemas/exhibitionCode"
        openKey:
          $ref: "#/components/schemas/openKey"
        pf:
          $ref: "#/components/schemas/pf"
        os:
          $ref: "#/components/schemas/os"
        userIp:
          $ref: "#/components/schemas/userIp"
    productBuyResponse:
      allOf:
        - $ref: '#/components/schemas/dataResult'
        - type: "object"
          properties:
            data:
              $ref: "#/components/schemas/buyResponseData"
    buyResponseData:
      type: "object"
      properties:
        orderNo:
          $ref: "#/components/schemas/orderNo"
        thirdOrderNo:
          $ref: "#/components/schemas/thirdOrderNo"
        cashType:
          $ref: "#/components/schemas/cashType"
        balance:
          $ref: "#/components/schemas/balance"
        presentBalance:
          $ref: "#/components/schemas/presentBalance"
        deductBalance:
          $ref: "#/components/schemas/deductBalance"
        sendCode:
          $ref: "#/components/schemas/sendCode"
        postSendItemCnt:
          $ref: "#/components/schemas/postSendItemCnt"
        packSendItemCnt:
          $ref: "#/components/schemas/packSendItemCnt"
    midasBuyResponse:
      allOf:
        - $ref: '#/components/schemas/dataResult'
        - type: "object"
          properties:
            data:
              $ref: "#/components/schemas/midasBuyData"
    midasBuyData:
      type: object
      properties:
        orderNo:
          $ref: "#/components/schemas/orderNo"
        thirdOrderNo:
          $ref: "#/components/schemas/thirdOrderNo"
        urlParams:
          $ref: "#/components/schemas/urlParams"
    bulkBuyRequest:
      required:
        - channelCode
        - orders
        - os
      type: object
      properties:
        channelCode:
          $ref: "#/components/schemas/channelCode"
        openKey:
          $ref: "#/components/schemas/openKey"
        pf:
          $ref: "#/components/schemas/pf"
        orders:
          type: "array"
          description: "购买的订单信息, 限制1-20"
          maxItems: 20
          minItems: 1
          items:
            $ref: "#/components/schemas/order"
        os:
          $ref: "#/components/schemas/os"
        userIp:
          $ref: "#/components/schemas/userIp"
    serverBulkBuyRequest:
      allOf:
        - $ref: '#/components/schemas/bulkBuyRequest'
        - type: "object"
          properties:
            userInfo:
              $ref: "#/components/schemas/userInfo"
    bulkBuyResponse:
      allOf:
        - $ref: '#/components/schemas/dataResult'
        - type: "object"
          properties:
            data:
              $ref: "#/components/schemas/bulkBuyResponseData"
    bulkBuyResponseData:
      type: "object"
      properties:
        orders:
          $ref: "#/components/schemas/responseOrders"
        packSendItemCnt:
          $ref: "#/components/schemas/packSendItemCnt"
        postSendItemCnt:
          $ref: "#/components/schemas/postSendItemCnt"
        sendCode:
          $ref: "#/components/schemas/sendCode"
    responseOrders:
      type: "array"
      items:
        properties:
          orderNo:
            $ref: "#/components/schemas/orderNo"
          thirdOrderNo:
            $ref: "#/components/schemas/thirdOrderNo"
          cashType:
            $ref: "#/components/schemas/cashType"
          deductBalance:
            $ref: "#/components/schemas/deductBalance"
          packSendItemCnt:
            $ref: "#/components/schemas/packSendItemCnt"
          postSendItemCnt:
            $ref: "#/components/schemas/postSendItemCnt"
          sendCode:
            $ref: "#/components/schemas/sendCode"
    purchasedResponse:
      allOf:
        - $ref: "#/components/schemas/dataResult"
        - type: "object"
          properties:
            data:
              allOf:
                - $ref: "#/components/schemas/pageResult"
                - type: "object"
                  properties:
                    list:
                      type: "array"
                      items:
                        $ref: "#/components/schemas/purchasedData"
    purchasedDetailResponse:
      allOf:
        - $ref: "#/components/schemas/dataResult"
        - type: "object"
          properties:
            data:
              allOf:
                - $ref: "#/components/schemas/purchasedData"
                - type: "object"
                  properties:
                    itemList:
                      $ref: "#/components/schemas/itemList"
    purchasedData:
      type: "object"
      properties:
        orderNo:
          $ref: "#/components/schemas/orderNo"
        thirdOrderNo:
          $ref: "#/components/schemas/thirdOrderNo"
        channelCode:
          $ref: "#/components/schemas/channelCode"
        exhibitionCode:
          $ref: "#/components/schemas/exhibitionCode"
        cashType:
          $ref: "#/components/schemas/cashType"
        unitPrice:
          $ref: "#/components/schemas/unitPrice"
        purchaseQuantity:
          $ref: "#/components/schemas/purchasedQuantity"
        discountStatus:
          $ref: "#/components/schemas/discountRateUse"
        originalPayPrice:
          $ref: "#/components/schemas/originalPayPrice"
        payPrice:
          $ref: "#/components/schemas/payPrice"
        payStatus:
          $ref: "#/components/schemas/payStatus"
        payMsg:
          $ref: "#/components/schemas/payMsg"
        provideStatus:
          $ref: "#/components/schemas/provideStatus"
        provideMsg:
          $ref: "#/components/schemas/provideMsg"
        provideAt:
          $ref: "#/components/schemas/provideAt"
        createdAt:
          $ref: "#/components/schemas/createdAt"
        product:
          $ref: "#/components/schemas/product"
    limitPurchasedResponse:
      allOf:
        - $ref: '#/components/schemas/dataResult'
        - type: "object"
          properties:
            data:
              $ref: "#/components/schemas/limitPurchasedData"
    limitPurchasedData:
      type: object
      properties:
        productId:
          $ref: "#/components/schemas/productId"
        allowPurchase:
          $ref: "#/components/schemas/allowPurchase"
        purchaseLimitUse:
          $ref: "#/components/schemas/purchaseLimitUse"
        purchaseLimitCount:
          $ref: "#/components/schemas/purchaseLimitCount"
        purchasedCount:
          $ref: "#/components/schemas/purchasedCount"
        discountLimitUse:
          $ref: "#/components/schemas/discountLimitUse"
        allowDiscountPurchase:
          $ref: "#/components/schemas/allowDiscountPurchase"
        discountLimitCount:
          $ref: "#/components/schemas/discountLimitCount"
        discountPurchasedCount:
          $ref: "#/components/schemas/discountPurchasedCount"
    resetRechargeRequest:
      type: "object"
      required:
        - cashType
        - firstRecharge
        - userInfo
        - os
        - reason
      properties:
        cashType:
          $ref: "#/components/schemas/cashType"
        firstRecharge:
          $ref: "#/components/schemas/firstRecharge"
        os:
          $ref: "#/components/schemas/os"
        userInfo:
          $ref: "#/components/schemas/userInfo"
        reason:
          $ref: "#/components/schemas/reason"
    change:
      type: "string"
      description: "更新内容"
      example: "上线多款新商品"
    forceUpdate:
      type: "boolean"
      description: "是否强制更新"
      example: true
    releaseDate:
      type: "string"
      format: "date-time"
      description: "发布时间"
      example: "2023-01-12 00:00:00"
    version:
      type: "string"
      description: "版本"
      example: "3.0.0"
    versionResponseData:
      type: object
      properties:
        change:
          $ref: "#/components/schemas/change"
        forceUpdate:
          $ref: "#/components/schemas/forceUpdate"
        releaseDate:
          $ref: "#/components/schemas/releaseDate"
        version:
          $ref: "#/components/schemas/version"
    versionResponse:
      allOf:
        - $ref: "#/components/schemas/dataResult"
        - type: "object"
          properties:
            data:
              $ref: "#/components/schemas/versionResponseData"
    itemListResponse:
      allOf:
        - $ref: "#/components/schemas/dataResult"
        - type: "object"
          properties:
            data:
              allOf:
                - type: "object"
                  properties:
                    list:
                      type: "array"
                      items:
                        $ref: "#/components/schemas/itemInfo"
    itemInfo:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/xk5ItemId"
        source:
          $ref: "#/components/schemas/source"
        itemId:
          $ref: "#/components/schemas/itemId"
        itemName:
          $ref: "#/components/schemas/itemName"
        itemIcon:
          $ref: "#/components/schemas/itemIcon"
        itemType:
          $ref: "#/components/schemas/itemType"
        itemTag:
          $ref: "#/components/schemas/itemTag"
        itemCategory:
          $ref: "#/components/schemas/itemCategory"
        image:
          $ref: "#/components/schemas/itemImage"
        genderType:
          $ref: "#/components/schemas/genderType"
        itemGrade:
          $ref: "#/components/schemas/itemGrade"
        itemDesc:
          $ref: "#/components/schemas/itemDesc"
  examples:
    Unauthorized:
      description: "Unauthenticated"
      value: { "code": 401, "message": "Unauthenticated" }
    ServiceError:
      description: "Service error, please contact us"
      value: { "code": 500, "message": "Service error, please contact us" }
    ProductNotFound:
      description: "Product %s was not found"
      value: { "code": 40101, "message": "Product %s was not found" }
    OrderNotFound:
      description: "Order was not found"
      value: { "code": 40105, "message": "Order was not found" }
    CashTypeNotFound:
      description: "Product %s Cash type not found"
      value: { "code": 40106, "message": "Product %s Cash type not found" }
    ChannelNotFound:
      description: "Channel could not match"
      value: { "code": 40107, "message": "Channel could not match" }
    CategoryNotFound:
      description: "Category code not found"
      value: { "code": 40108, "message": "Category code not found" }
    LackOfCash:
      description: "Lack of cash"
      value: { "code": 41101, "message": "lack of cash"}
    ThirdOrderAlreadyExist:
      description: "Third order no already exists"
      value: { "code": 41104,"message": "Third order no already exists" }
    NotAllowedBuy:
      description: "Not allowed to buy"
      value: { "code": 50101, "message": "Not allowed to buy" }
    LimitPurchased:
      description: "Limited purchase %s times, It has been purchased %s times"
      value: { "code": 50102, "message": "Limited purchase %s times, It has been purchased %s times" }
    WalletNotFound:
      description: "Wallet not found, Please query the balance before operation"
      value: { "code": 40109,"message": "Wallet not found, Please query the balance before operation" }