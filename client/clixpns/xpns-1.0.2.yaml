openapi: 3.0.1
info:
  title: XPNS API 文档
  version: "1.0.0"
servers:
  - url: https://api-{env}.xk5.com
    description: Development & Test Environment
    variables:
      env:
        enum:
          - sdev0
          - sdev
          - dev
          - dev2
          - dev3
          - mod
          - stg
        default: sdev0
        description: "sdev0: 藤蔓开发环境, sdev: 研发开发环境, dev/dev2: 研发测试环境"
  - url: https://api.xk5.com
    description: Production Environment
paths:
  /xpns/v1.0/ses/send:
    post:
      tags:
      - 消息推送接口
      summary: ses 邮件推送接口
      requestBody:
        description: body 参数
        content:
          'json/application':
            schema:
              $ref: '#/components/schemas/SesMessageRequest'
        required: true
      responses:
        200:
          description: 正常响应
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseWithRequestId'
              examples:
                Success:
                  $ref: '#/components/examples/SuccessWithRequestId'
                InternalServiceError:
                  $ref: '#/components/examples/InternalServiceError'
                GetVerifyCodeFrequently:
                  $ref: '#/components/examples/GetVerifyCodeFrequently'
                SendVerifyCodeFrequently:
                  $ref: '#/components/examples/SendVerifyCodeFrequently'
                ExternalServiceError:
                  $ref: '#/components/examples/ExternalServiceError'
        400:
          description: 参数错误
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ResponseResult'
              examples:
                ParameterError:
                  $ref: '#/components/examples/ParameterError'
                InvalidScene:
                  $ref: '#/components/examples/InvalidScene'
                AuthorizationError:
                  $ref: '#/components/examples/AuthorizationError'
                EmailFormatError:
                  $ref: '#/components/examples/EmailFormatError'
      x-codegen-request-body-name: request
      x-show: false
  /xpns/v1.0/ses/verify/:
    post:
      tags:
      - 消息推送接口
      summary: ses 邮箱验证码校验
      parameters:
      - name: clientId
        in: header
        example: "tencent_cloud_sdk_client"
        description: 客户端认证Id
        required: true
        schema:
          type: string
      - name: clientSecret
        in: header
        example: "ashutidshg2fjgf1fh0dgsrvmpi"
        description: 客户端认证秘钥
        required: true
        schema:
          type: string
      requestBody:
        description: body 参数
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/SesVerifyRequest'
        required: true
      responses:
        200:
          description: 正常响应
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseResult'
              examples:
                Success:
                  $ref: '#/components/examples/Success'
                InternalServiceError:
                  $ref: '#/components/examples/InternalServiceError'
                VerifyCodeInvalid:
                  $ref: '#/components/examples/VerifyCodeInvalid'
                VerifyCodeIncorrect:
                  $ref: '#/components/examples/VerifyCodeIncorrect'
        400:
          description: 参数错误
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ResponseResult'
              examples:
                ParameterError:
                  $ref: '#/components/examples/ParameterError'
                InvalidScene:
                  $ref: '#/components/examples/InvalidScene'
                AuthorizationError:
                  $ref: '#/components/examples/AuthorizationError'
                EmailFormatError:
                  $ref: '#/components/examples/EmailFormatError'
      x-codegen-request-body-name: request
  /xpns/v1.0/sms/send:
    post:
      tags:
      - 消息推送接口
      summary: sms 短信推送接口
      requestBody:
        description: body 参数
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/MobileMessageRequest'
        required: true
      responses:
        200:
          description: 正常响应
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseWithRequestId'
              examples:
                Success:
                  $ref: '#/components/examples/SuccessWithRequestId'
                InternalServiceError:
                  $ref: '#/components/examples/InternalServiceError'
                GetVerifyCodeFrequently:
                  $ref: '#/components/examples/GetVerifyCodeFrequently'
                SendVerifyCodeFrequently:
                  $ref: '#/components/examples/SendVerifyCodeFrequently'
                ExternalServiceError:
                  $ref: '#/components/examples/ExternalServiceError'
                CodeSendingRepeactly:
                  $ref: '#/components/examples/CodeSendingRepeactly'
        400:
          description: 参数错误
          content:
            'application/json':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ResponseResult'
              examples:
                ParameterError:
                  $ref: '#/components/examples/ParameterError'
                PhoneNumberFormatError:
                  $ref: '#/components/examples/PhoneNumberFormatError'
                TemplateTypeNotFound:
                  $ref: '#/components/examples/TemplateTypeNotFound'
                PhoneNumberMustBeOne:
                  $ref: '#/components/examples/PhoneNumberMustBeOne'
                InvalidScene:
                  $ref: '#/components/examples/InvalidScene'
                AuthorizationError:
                  $ref: '#/components/examples/AuthorizationError'
      x-codegen-request-body-name: request
  /xpns/v1.0/sms/test/verification_code:
    get:
      tags:
      - 消息推送接口
      summary: sms 获取一个或多个手机的验证码
        cellphones
      parameters:
      - name: phoneNumber
        in: query
        description: 手机号码参数，你可以传递一个或多个
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          example: ["18888888888"]
      - name: scene
        in: query
        description: |-
          场景参数，可选值有：
          1、editor_login_register（编辑器登录或注册）
          2、develop_community_login_register（开发者社区登录或注册）
          3、develop_community_bind（开发者社区手机绑定）
          4、sgxq_app_login_register（手工星球App登录或注册）
          5、sgxq_app_bind（手工星球App手机绑定）
        required: true
        schema:
          type: string
        example: editor_login_register
      responses:
        200:
          description: 正常响应
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseWithVerificationCodeVOList'
              examples:
                Success:
                  $ref: '#/components/examples/ResponseWithVerificationCodeVOList'
                InternalServiceErrorWithoutData:
                  $ref: '#/components/examples/InternalServiceErrorWithoutData'
        400:
          description: 请求参数错误
          content:
            'application/json':
              examples:
                PhoneNumberFormatError:
                  $ref: '#/components/examples/PhoneNumberFormatError'
  /xpns/v1.0/sms/verify/{telephoneNumber}:
    post:
      tags:
      - 消息推送接口
      summary: sms 短信验证码校验
      parameters:
      - name: telephoneNumber
        in: path
        description: 手机号码
        example: "18888888888"
        required: true
        schema:
          type: string
      requestBody:
        description: body 参数
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/VerifyCodeRequest'
        required: true
      responses:
        200:
          description: 正常响应
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseResult'
              examples:
                Success:
                  $ref: '#/components/examples/Success'
                InternalServiceErrorWithoutData:
                  $ref: '#/components/examples/InternalServiceErrorWithoutData'
                VerifyCodeInvalid:
                  $ref: '#/components/examples/VerifyCodeInvalid'
                VerifyCodeIncorrect:
                  $ref: '#/components/examples/VerifyCodeIncorrect'
                VerifyCodeLimit:
                  $ref: '#/components/examples/VerifyCodeLimit'
        400:
          description: 请求参数错误
          content:
            'application/json':
              examples:
                ParameterError:
                  $ref: '#/components/examples/ParameterError'
                PhoneNumberFormatError:
                  $ref: '#/components/examples/PhoneNumberFormatError'
                InvalidScene:
                  $ref: '#/components/examples/InvalidScene'
                AuthorizationError:
                  $ref: '#/components/examples/AuthorizationError'
      x-codegen-request-body-name: request
  /xpns/v1.0/tpns/{service_type}/send:
    post:
      tags:
      - 消息推送接口
      summary: tpns 消息推送接口
      security:
        - Internal: []
      parameters:
      - name: service_type
        in: path
        description: 服务类型 game | platform
        example: platform
        required: true
        schema:
          type: string
      - name: OS-Type
        in: header
        description: 推送的设备类型，可选值有 Android | iOS
        required: true
        schema:
          type: string
        example: Android
      requestBody:
        description: body 参数
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/TpnsRequest'
        required: true
      responses:
        200:
          description: 正常响应
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseWithRequestId'
              examples:
                Success:
                  $ref: '#/components/examples/SuccessWithRequestId'
                InternalServiceError:
                  $ref: '#/components/examples/InternalServiceError'
                ExternalServiceError:
                  $ref: '#/components/examples/ExternalServiceError'
        400:
          description: 请求参数错误
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseResult'
              examples:
                OsTypeBlank:
                  $ref: '#/components/examples/OsTypeBlank'
                OsTypeIncorrect:
                  $ref: '#/components/examples/OsTypeIncorrect'
                ServiceTypeInvalid:
                  $ref: '#/components/examples/ServiceTypeInvalid'
                ParameterError:
                  $ref: '#/components/examples/ParameterError'
                NullToken:
                  $ref: '#/components/examples/NullToken'
                TokenInvalid:
                  $ref: '#/components/examples/TokenInvalid'
      x-codegen-request-body-name: request
  /xpns/v1.0/tpns/{service_type}/tag/bind:
    post:
      tags:
      - tpns 相关绑定接口
      summary: tpns 消息推送接口
      security:
        - Internal: []
      parameters:
      - name: service_type
        in: path
        description: 服务类型 game | platform
        example: platform
        required: true
        schema:
          type: string
      - name: OS-Type
        in: header
        description: 推送的设备类型 Android | iOS
        required: true
        schema:
          type: string
        example: Android
      requestBody:
        description: body 参数
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/TagsBindRequest'
        required: true
      responses:
        200:
          description: 正常响应
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseWithRequestId'
              examples:
                Success:
                  $ref: '#/components/examples/SuccessWithRequestId'
                InternalServiceErrorWithoutData:
                  $ref: '#/components/examples/InternalServiceErrorWithoutData'
                ExternalServiceError:
                  $ref: '#/components/examples/ExternalServiceError'
        400:
          description: 请求参数错误
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseResult'
              examples:
                OsTypeBlank:
                  $ref: '#/components/examples/OsTypeBlank'
                OsTypeIncorrect:
                  $ref: '#/components/examples/OsTypeIncorrect'
                ServiceTypeInvalid:
                  $ref: '#/components/examples/ServiceTypeInvalid'
                ParameterError:
                  $ref: '#/components/examples/ParameterError'
                NullToken:
                  $ref: '#/components/examples/NullToken'
                TokenInvalid:
                  $ref: '#/components/examples/TokenInvalid'
      x-codegen-request-body-name: request
  /xpns/v1.0/tpns/token/bind:
    post:
      tags:
      - tpns 相关绑定接口
      summary: "TPNS 设备 Token 与 MemberNo 绑定"
      security:
        - Internal: []
      parameters:
        - $ref: '#/components/parameters/HeaderOsType'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/TpnsDeviceTokenBindRequest'
        required: true
      responses:
          200:
            description: "OK"
            content:
              'application/json':
                schema:
                  $ref: '#/components/schemas/ResponseResult'
                examples:
                  MemberLoginResponse:
                    $ref: '#/components/examples/Success'
          400:
            description: "Invalid argument"
            content:
              'application/json':
                schema:
                  $ref: '#/components/schemas/ResponseResult'
                examples:
                  InvalidArgument:
                    $ref: '#/components/examples/InvalidArgument'
          401:
            description: "认证失败"
            content:
              'application/json':
                schema:
                  $ref: '#/components/schemas/ResponseResult'
                examples:
                  Unauthenticated:
                    $ref: '#/components/examples/Unauthenticated'
          500:
            description: "服务未知错误"
            content:
              'application/json':
                schema:
                  $ref: '#/components/schemas/ResponseResult'
                examples:
                  Unauthenticated:
                    $ref: '#/components/examples/ServiceError'
components:
  securitySchemes:
    Internal:
      type: apiKey
      name: Authorization
      in: header
  examples:
    Success: 
      description: 成功
      value:
        code: 0
        message: success | OK
    SuccessWithRequestId:
      description: 成功
      value:
        code: 0
        message: success
        data:
          requestId: 413c6aa2f67c44349ee83ca7bc26ef4c
    ResponseWithVerificationCodeVOList: 
      description: 成功
      value:
        code: 0
        message: success
        data:
          list:
          - cellphone_number: 18888888888
            scene: editor_login_register
            verification_code: 1234
          total: 1
    InvalidArgument:
      description: "参数无效"
      value:
        code: 400
        message: "Invalid argument:xxx"
    Unauthenticated:
      description: "认证失败"
      value:
        code: 401
        message: "Unauthenticated"
    ServiceError:
      description: "服务未知错误"
      value:
        code: 500
        message: "Service error, please contact us"
    InternalServiceErrorWithoutData:
      description: 服务内部错误
      value:
        code: 500
        message: xxx
    InternalServiceError:
      description: 服务内部错误
      value:
        code: 500
        message: xxx
        data:
          requestId: dgfd56453shh
    OsTypeBlank:
      description: 操作系统类型为空
      value:
        code: 1002
        message: Os-Type is blank
    OsTypeIncorrect:
      description: 操作系统类型不正确
      value:
        code: 1003
        message: Os-Type is incorrect
    ServiceTypeInvalid:
      description: 服务类型无效
      value:
        code: 1004
        message: ServiceType is invalid
    ParameterError:
      description: 请求参数有误
      value:
        code: 30001
        message: 'The parameter error: xxx'
    PhoneNumberFormatError:
      description: 至少有一个手机号码的格式是错的
      value:
        code: 30002
        message: At least one of the phoneNumbers is incorrect
    GetVerifyCodeFrequently:
      description: 60秒内不能重复获取验证码
      value:
        code: 30004
        message: The verification code cannot be obtained again within 60 seconds
        data:
          requestId: 413c6aa2f67c44349ee83ca7bc26ef4c
    TemplateTypeNotFound:
      description: 短信模板未找到
      value:
        code: 30006
        message: The templateType was not found
    PhoneNumberMustBeOne:
      description: 获取短信验证码的场景，手机号码的数量必须等于一个
      value:
        code: 30007
        message: The phoneNumbers size must be one for verification
    InvalidScene:
      description: 场景参数有误
      value:
        code: 30008
        message: The scene is incorrect
    SendVerifyCodeFrequently:
      description: 频繁获取验证码
      value:
        code: 30009
        message: Send message frequently
        data:
          requestId: 413c6aa2f67c44349ee83ca7bc26ef4c
    ExternalServiceError:
      description: 外部服务器错误
      value:
        code: 31001
        message: 'External service error: xxx'
        data:
          requestId: 413c6aa2f67c44349ee83ca7bc26ef4c
    AuthorizationError:
      description: 鉴权错误
      value:
        code: 31002
        message: Authorization error
    CodeSendingRepeactly:
      description: 验证码已发送
      value:
        code: 31003
        message: The verification code had sent
    VerifyCodeInvalid:
      description: 验证码无效
      value:
        code: 31004
        message: The verification code is invalid
    VerifyCodeIncorrect:
      description: 验证码错误
      value:
        code: 31005
        message: The verification code is incorrect
    VerifyCodeLimit:
      description: 验证码获取次数达到上限
      value:
        code: 31006
        message: Verified code limit
        data:
          requestId: 413c6aa2f67c44349ee83ca7bc26ef4c
    EmailFormatError:
      description: 邮箱地址格式不正确
      value:
        code: 31007
        message: Email Address is incorrect
    NullToken:
      description: token 为空
      value:
        code: 90000
        message: Request token is null
    TokenInvalid:
      description: token 无效
      value:
        code: 90001
        message: Invalid access token
  schemas:
    ResponseResult:
      type: object
      properties:
        code:
          type: integer
          description: 响应码
          example: 0
        message:
          type: string
          example: "success | OK"
          description: "响应信息"
    ResponseWithRequestId:
      type: object
      description: 请求成功
      allOf:
      - $ref: '#/components/schemas/ResponseResult'
      - type: object
        properties:
          data:
            type: object
            properties:
              requestId:
                type: string
                description: 业务处理结果的唯一标识
                example: 413c6aa2f67c44349ee83ca7bc26ef4c
    ResponseWithVerificationCodeVOList:
      type: object
      description: 请求成功
      allOf:
      - $ref: '#/components/schemas/ResponseResult'
      - type: object
        properties:
          data:
            type: object
            properties:
              list:
                type: array
                description: 验证码集合
                items:
                  $ref: '#/components/schemas/VerificationCodeVO'
              total:
                type: integer
                description: 总数
                example: 1
    VerificationCodeVO:
      type: object
      properties:
        cellphone_number:
          type: integer
          description: 手机号码
          example: 18888888888
        scene:
          type: string
          description: 场景
          example: editor_login_register
        verification_code:
          type: integer
          description: 验证码
          example: 1234
    MobileMessageRequest:
      required:
      - client_id
      - client_secret
      - nation_code
      - phone_numbers
      - scene
      - template_type
      type: object
      properties:
        client_id:
          type: string
          example: "tencent_cloud_sdk_client"
          description: 客户端认证Id
        client_secret:
          type: string
          example: "ashutidshg2fjgf1fh0dgsrvmpi"
          description: 客户端认证秘钥
        content:
          type: string
          example: ""
          description: 可选内容
        nation_code:
          type: string
          example: "zh"
          description: 国家代码
        phone_numbers:
          type: array
          items:
            type: string
          example:
          - "18888888888"
          description: 手机号码
        scene:
          type: string
          description: |-
            场景参数，可选值有：
            1、editor_login_register（编辑器登录或注册）
            2、develop_community_login_register（开发者社区登录或注册）
            3、develop_community_bind（开发者社区手机绑定）
            4、sgxq_app_login_register（手工星球App登录或注册）
            5、sgxq_app_bind（手工星球App手机绑定）
          default: editor_login_register
        template_type:
          type: string
          example: verificationCode
          description: 短信模板映射
    SesMessageRequest:
      required:
      - client_id
      - client_secret
      - email
      - scene
      type: object
      properties:
        client_id:
          type: string
          example: "tencent_cloud_sdk_client"
          description: 客户端认证Id
        client_secret:
          type: string
          example: "ashutidshg2fjgf1fh0dgsrvmpi"
          description: 客户端认证秘钥
        email:
          type: string
          description: 邮箱地址
          example: "123@tenvine.com"
        scene:
          type: string
          description: |-
            场景参数，可选值有：
            1、editor_login_register（编辑器登录或注册）
            2、develop_community_login_register（开发者社区登录或注册）
            3、develop_community_bind（开发者社区手机绑定）
            4、sgxq_app_login_register（手工星球App登录或注册）
            5、sgxq_app_bind（手工星球App手机绑定）
          example: editor_login_register
    SesVerifyRequest:
      required:
      - email
      - scene
      - verificationCode
      type: object
      properties:
        email:
          type: string
          description: 邮箱地址
          example: "1234@tenvine.com"
        scene:
          type: string
          description: |-
            场景参数，可选值有：
            1、editor_login_register（编辑器登录或注册）
            2、develop_community_login_register（开发者社区登录或注册）
            3、develop_community_bind（开发者社区手机绑定）
            4、sgxq_app_login_register（手工星球App登录或注册）
            5、sgxq_app_bind（手工星球App手机绑定）
          default: editor_login_register
        verificationCode:
          type: string
          description: 验证码
          example: "1234"
    TagTokenDTO:
      type: object
      properties:
        tag:
          maxLength: 50
          type: string
          description: 标签
          example: "df"
        token:
          maxLength: 36
          type: string
          description: tpns token
          example: asddasdas
    TagsBindRequest:
      required:
      - operator_type
      type: object
      properties:
        member_id_list:
          maxItems: 500
          type: array
          items:
            type: string
          description: |- 
            member_id 列表：
            operator_type = 1,2,3 时必填
            列表最大不能超过500个值
          example:
            - "123"
        operator_type:
          type: integer
          description: |-
            标签操作类型：
            
            1 - 增加单个 tag，对单个 member_id / token 而言

            2 - 增加多个 tag，对单个 member_id / token 而言

            3 - 添加单个 tag，对多个 member_id / token 而言

            4 - 批量添加标签（每次调用最多允许设置20对，每个对里面标签在前，token 在后）
          example: 1
        tag_list:
          maxItems: 500
          type: array
          items:
            type: string
          description: |-
            标签列表：
            operator_type = 1,2,3 时必填
            列表最大不能超过500个值
            tag 字符串长度不能超过50
          example:
            - df
        tag_token_list:
          maxItems: 20
          type: array
          items:
            $ref: '#/components/schemas/TagTokenDTO'
          description: |-
            标签、设备对应列表：
            operator_type = 4 时必填
            每个对里面标签在前，token 在后
            列表最大不能超过20个值
            tag 字符串长度不能超过50
            token 字符串长度不能超过36
        token_list:
          maxItems: 500
          type: array
          items:
            type: string
          description: |-
            token 列表：
            operator_type = 1,2,3 时必填
            列表最大不能超过500个值
            token 字符串长度不能超过36
            token_list 和 member_id_list 互斥，优先取 token_list
          example:
            - asd
    TpnsRequest:
      required:
      - audience_type
      - content
      - message_type
      - title
      type: object
      properties:
        account_list:
          type: array
          items:
            type: string
          description: 推送目标，audience_type 为 account 时使用
          example:
            - "1234"
        account_type:
          type: integer
          description: 账号类型，需要与推送的账号所属类型一致，audience_type 为 account 时使用
          example: 0
        audience_type:
          type: string
          description: |-
            推送目标：
            all：全量推送
            tag：标签推送
            token：单设备推送
            token_list：设备列表推送
            account：单账号推送
            account_list：账号列表推送
            package_account_push：号码包推送
            package_token_push：token 文件包推送
          example: all
        content:
          type: string
          description: 推送的内容
          example: 内容
        custom_content:
          type: string
          description: 需要序列化为 json string
          example: "{'a': 1}"
        message_type:
          type: string
          description: |-
            消息类型：
            notify：通知
            message：透传消息/静默消息
          example: notify
        tag_type:
          type: string
          description: 标签类型，audience_type 为 tag 时使用
          example: xg_user_define
        tags:
          type: array
          items:
            type: string
          description: 具体标签值，类型：string，如 tag1，guangdong 等。audience_type 为 tag 时使用
          example:
            - "guangdong"
        tags_operator:
          type: string
          description: |-
            tags 内标签对应的运算符。
            - OR：或运算
            - AND：且运算。
            audience_type 为 tag 时使用
          example: OR
        title:
          type: string
          description: 推送的标题
          example: 标题
        token_list:
          type: array
          items:
            type: string
          description: 推送目标，audience_type 为 token_list 时使用
          example:
            - sdgsdgfs
        upload_id:
          type: integer
          description: 号码包或 token 包的上传 ID（仅号码包推送\ token 文件包推送时使用）
          example: 124345324
    VerifyCodeRequest:
      required:
      - clientId
      - clientSecret
      - scene
      - verificationCode
      type: object
      properties:
        clientId:
          type: string
          example: "tencent_cloud_sdk_client"
          description: 客户端认证Id
        clientSecret:
          type: string
          example: "ashutidshg2fjgf1fh0dgsrvmpi"
          description: 客户端认证秘钥
        scene:
          type: string
          description: |-
            场景参数，可选值有：
            1、editor_login_register（编辑器登录或注册）
            2、develop_community_login_register（开发者社区登录或注册）
            3、develop_community_bind（开发者社区手机绑定）
            4、sgxq_app_login_register（手工星球App登录或注册）
            5、sgxq_app_bind（手工星球App手机绑定）
          default: editor_login_register
        verificationCode:
          type: string
          description: 验证码
          example: "1234"
    TpnsDeviceTokenBindRequest:
      required:
        - "pushId"
      type: object
      properties:
        push_id:
          $ref: '#/components/schemas/TpnsDeviceToken'
        service_type:
          $ref: '#/components/schemas/ServiceType'
    TpnsDeviceToken:
      type: string
      description: "TPNS 颁发的设备 token"
      example: "ASD1243245ASFD"
    ServiceType:
      type: string
      description: "服务类型：game | platform"
      example: "game"
    OsType:
      type: string
      description: "用户设备操作系统类型"
      example: "Android"
  parameters:
    HeaderOsType:
      name: Os-Type
      in: header
      description: "用户设备操作系统类型"
      schema:
        $ref: '#/components/schemas/OsType'
